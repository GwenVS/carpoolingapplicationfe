{"version":3,"sources":["webpack:///./src/app/pages/login/login.component.html","webpack:///./src/app/pages/login/login.component.ts","webpack:///./src/app/pages/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;oGAkBwB,kJAAqD,wMAErD;oGAKA,kJAAwD,2MAExD;oGA3BxB,0iDAI0B,IACtB,6gBAAwB,IAEpB,sJAA+B,KAC3B,0fAAU,IACN,wTAAgB,uFACZ;;;iZAA8C,GAA1B,wDAAyB,IAAC,2FAAmB,MAErE,gUAAkB,IACd;;;;;wBAAkG;MAArB;;wBAAoB;MAAjG,qpDAAkG,IAC9F,47EAAmC,MACjC;;;;;;;;;;;;;;;;;;;;;01FACiD,KAEnD,wYAAqD,IAGrD,i8EAAmC,MAC/B;;;;;;;;;;;;;;;;;;;;;01FAC6C,KAEjD,wYAAwD,IAGxD,wSAAuG,YAAlB;;wBAAiB;MAAtG,2tBAAuG,+EAAM,mDA5BhI,wBAAiB,EAAtB,YAI0B,EAJrB,SAAiB,GAAY,+BAA6B,EAA/D,YAI0B,EAJQ,SAA6B,GAA/D,YAI0B,GACjB,wBAAiB,EAAtB,YAAwB,EAAnB,SAAiB,GAKc,uCAAyB,GAA7C,aAA8C,EAA1B,SAAyB,GAGvC,yBAAiB,EAAvB,aAAkG,EAA5F,UAAiB,GAAC,gCAA6B,EAArD,aAAkG,EAA1E,UAA6B,GAAC,oBAAsB,WAA5E,aAAkG,EAA5C,UAAsB,GAGvC,mBAAQ,EADvC,aACiD,EAAlB,UAAQ,GAAhC,wBAAuB,EAD9B,aACiD,EAA1C,UAAuB,GADV,wBAAU,EAAe,0CAAqC,EACnD,mBAAQ,EADhC,wBAAY,EAAnB,aACiD,EAD7B,UAAU,EAAe,UAAqC,EACnD,UAAQ,EADhC,UAAY,GAGhB,oBAAwB,mBAA7B,aAAqD,EAAhD,UAAwB,GAKE,mBAAQ,EADnC,aAC6C,EAAlB,UAAQ,GAAnC,4BAA0B,EAD1B,aAC6C,EAA7C,WAA0B,GADH,4BAAa,EAAe,+CAAyC,EACjE,oBAAQ,EAD5B,4BAAe,EAAtB,aAC6C,EADtB,WAAa,EAAe,WAAyC,EACjE,WAAQ,EAD5B,WAAe,GAGrB,qBAA2B,sBAAhC,aAAwD,EAAnD,WAA2B,GAGwB,sBAA4B,iBAA1D,2BAAe,EAAzC,aAAuG,EAA/C,WAA4B,EAA1D,WAAe,2BAlB7C,uMAA8C,GAG9C,4tBAAkG,GAC9F,uzEAAmC,IACjC,ouDACiD,IAKnD,uzEAAmC,IAC/B,ouDAC6C,IAKjD,4PAAuG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5B7E;AACT;AACzC,yDAAyD;AACW;AACpE;IAyBE,wBAAoB,MAAc,EACd,EAAe;QADf,WAAM,GAAN,MAAM,CAAQ;QACd,OAAE,GAAF,EAAE,CAAa;QAlBnC,eAAU,GAAG;YACX,OAAO,EAAE,EAAE;YACX,UAAU,EAAE,EAAE;SACf,CAAC;QACF,uBAAkB,GAAG;YACnB,OAAO,EAAE;gBACP,UAAU,EAAE,yBAAyB;gBACrC,OAAO,EAAE,+BAA+B;aACzC;YACD,UAAU,EAAE;gBACV,UAAU,EAAE,4BAA4B;gBACxC,SAAS,EAAE,+CAA+C;gBAC1D,WAAW,EAAE,qCAAqC;gBAClD,WAAW,EAAE,sCAAsC;aACpD;SACF,CAAC;IAIF,CAAC;IAED,iCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,kCAAS,GAAT;QAAA,iBAiBC;QAhBC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC;YAC5B,OAAO,EAAE,CAAC,EAAE,EAAE;oBACZ,yDAAU,CAAC,QAAQ;oBACnB,yDAAU,CAAC,KAAK;iBACjB;aACA;YACD,UAAU,EAAE,CAAC,EAAE,EAAE;oBACf,yDAAU,CAAC,OAAO,CAAC,2CAA2C,CAAC;oBAC/D,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC;oBACvB,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC;iBACzB;aACA;SACF,CAAC,CAAC;QAEH,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,cAAI,IAAI,YAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAzB,CAAyB,CAAC,CAAC;QACxE,IAAI,CAAC,cAAc,EAAE,CAAC;IACxB,CAAC;IAED,uCAAc,GAAd,UAAe,IAAU;QACvB,wBAAwB;QACxB,YAAY;QACZ,IAAI;QACJ,8BAA8B;QAC9B,yCAAyC;QACzC,wEAAwE;QACxE,mCAAmC;QACnC,uCAAuC;QACvC,wDAAwD;QACxD,yDAAyD;QACzD,4CAA4C;QAC5C,2EAA2E;QAC3E,2DAA2D;QAC3D,YAAY;QACZ,UAAU;QACV,QAAQ;QACR,MAAM;QACN,IAAI;IACN,CAAC;IACD,8BAAK,GAAL;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAC9B,CAAC;IACH,qBAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9EkD;AAUI;AAGvD,IAAM,MAAM,GAAW;IACnB,EAAC,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,+DAAc,EAAC;CACtC,CAAC;AACJ;IAAA;IAuBA,CAAC;IAAD,kBAAC;AAAD,CAAC","file":"pages-login-login-module-ngfactory.js","sourcesContent":["<div fxLayout=\"column\" fxFlexFill fxLayoutAlign=\"center center\" style=\"background-image:url('../../../assets/login11.jpg');\r\nheight: 100%;\r\nbackground-repeat: no-repeat;\r\nbackground-position: center;\r\nbackground-size: cover; \">\r\n    <div fxLayout=\"column\" >\r\n   \r\n        <div class=\" mat-elevation-z4\">\r\n            <mat-card>\r\n                <mat-card-title>User login\r\n                    <a class=\"redirect\" [routerLink]=\"['/sigup']\">Register an account</a>\r\n                </mat-card-title>\r\n                <mat-card-content>\r\n                    <form fxLayout=\"column\" fxLayoutAlign=\"start stretch\" [formGroup]=\"userForm\" (ngSubmit)=\"login()\">\r\n                        <mat-form-field class=\"full-width\">\r\n                          <input type=\"email\" id=\"email\" class=\"input\" placeholder=\"Please enter your email\"\r\n                                 formControlName=\"email\" required matInput>\r\n                        </mat-form-field>\r\n                        <div *ngIf=\"formErrors.email\" class=\"help is-danger\">\r\n                            {{ formErrors.email }}\r\n                        </div>\r\n                        <mat-form-field class=\"full-width\">\r\n                            <input type=\"password\" id=\"password\" class=\"input\" placeholder=\"please  enter your password\"\r\n                            formControlName=\"password\" required matInput>\r\n                        </mat-form-field>\r\n                        <div *ngIf=\"formErrors.password\" class=\"help is-danger\">\r\n                            {{ formErrors.password }}\r\n                        </div>\r\n                        <button mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"!userForm.valid\" (click)=\"login()\">log in</button>\r\n                    </form>\r\n                </mat-card-content>\r\n            </mat-card>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n// import { AuthService } from '../../core/auth.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  formErrors = {\r\n    'email': '',\r\n    'password': ''\r\n  };\r\n  validationMessages = {\r\n    'email': {\r\n      'required': 'Please enter your email',\r\n      'email': 'please enter your vaild email'\r\n    },\r\n    'password': {\r\n      'required': 'please enter your password',\r\n      'pattern': 'The password must contain numbers and letters',\r\n      'minlength': 'Please enter more than 4 characters',\r\n      'maxlength': 'Please enter less than 25 characters',\r\n    }\r\n  };\r\n\r\n  constructor(private router: Router,\r\n              private fb: FormBuilder) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.buildForm();\r\n  }\r\n\r\n  buildForm() {\r\n    this.userForm = this.fb.group({\r\n      'email': ['', [\r\n        Validators.required,\r\n        Validators.email\r\n      ]\r\n      ],\r\n      'password': ['', [\r\n        Validators.pattern('^(?=.*[0-9])(?=.*[a-zA-Z])([a-zA-Z0-9]+)$'),\r\n        Validators.minLength(6),\r\n        Validators.maxLength(25)\r\n      ]\r\n      ],\r\n    });\r\n\r\n    this.userForm.valueChanges.subscribe(data => this.onValueChanged(data));\r\n    this.onValueChanged();\r\n  }\r\n\r\n  onValueChanged(data?: any) {\r\n    // if (!this.userForm) {\r\n    //   return;\r\n    // }\r\n    // const form = this.userForm;\r\n    // for (const field in this.formErrors) {\r\n    //   if (Object.prototype.hasOwnProperty.call(this.formErrors, field)) {\r\n    //     this.formErrors[field] = '';\r\n    //     const control = form.get(field);\r\n    //     if (control && control.dirty && !control.valid) {\r\n    //       const messages = this.validationMessages[field];\r\n    //       for (const key in control.errors) {\r\n    //         if (Object.prototype.hasOwnProperty.call(control.errors, key)) {\r\n    //           this.formErrors[field] += messages[key] + ' ';\r\n    //         }\r\n    //       }\r\n    //     }\r\n    //   }\r\n    // }\r\n  }\r\n  login() {\r\n    this.router.navigate(['/']);\r\n  }\r\n}\r\n\r\n","import { NgModule } from '@angular/core';\r\nimport { LoginComponent } from './login.component';\r\nimport { \r\n        MatCardModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatInputModule,\r\n        MatToolbarModule\r\n       } from '@angular/material';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FormsModule , ReactiveFormsModule} from '@angular/forms';\r\n\r\nconst routes: Routes = [\r\n    {path: '', component: LoginComponent},\r\n  ];\r\n@NgModule({\r\n    imports: [\r\n        MatCardModule,\r\n        CommonModule,\r\n        FlexLayoutModule,\r\n        MatButtonModule,\r\n        MatButtonToggleModule,\r\n        MatInputModule,\r\n        MatToolbarModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        RouterModule.forChild(routes)\r\n    ],\r\n    declarations: [   \r\n        LoginComponent,\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n    providers: [\r\n    ]\r\n})\r\nexport class LoginModule {\r\n}\r\n"],"sourceRoot":""}